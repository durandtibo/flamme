name: Nightly Package Tests
on:
  schedule:
    - cron: '50 11 * * *' # run at 11:50 AM UTC
  workflow_dispatch:  # to trigger manually

permissions:
  contents: read

jobs:
  cyclic-imports:
    uses: ./.github/workflows/cyclic-imports.yaml

  stable-all:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, ubuntu-24.04, ubuntu-22.04, macos-latest, macos-15, macos-14, macos-13 ]
        python-version: [ '3.12', '3.11', '3.10', '3.9' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install package
        run: |
          pip install "flamme[all]"

      - name: Run some checks
        run: |
          python tests/package_checks.py

      - name: Run demo script
        run: |
          python -m scripts.demo


  stable-min:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, ubuntu-24.04, ubuntu-22.04, macos-latest, macos-15, macos-14, macos-13 ]
        python-version: [ '3.12', '3.11', '3.10', '3.9' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install package
        run: |
          pip install flamme

      - name: Run some checks
        run: |
          python tests/package_checks.py

      - name: Run demo script
        run: |
          python -m scripts.demo


  latest-all:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, ubuntu-24.04, ubuntu-22.04, macos-latest, macos-15, macos-14, macos-13 ]
        python-version: [ '3.12', '3.11', '3.10', '3.9' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install package
        run: |
          pip install --pre "flamme[all]"

      - name: Run some checks
        run: |
          python tests/package_checks.py

      - name: Run demo script
        run: |
          python -m scripts.demo


  latest-min:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, ubuntu-24.04, ubuntu-22.04, macos-latest, macos-15, macos-14, macos-13 ]
        python-version: [ '3.12', '3.11', '3.10', '3.9' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install package
        run: |
          pip install --pre flamme

      - name: Run some checks
        run: |
          python tests/package_checks.py

      - name: Run demo script
        run: |
          python -m scripts.demo


  coola:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.12', '3.11', '3.10', '3.9' ]
        coola-version: [ 0.8.7, 0.7.4, 0.7.2 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install flamme
        run: |
          pip install flamme

      - name: Install valid package version
        uses: durandtibo/pip-install-package-action@v0.3.2
        with:
          package-name: 'coola'
          package-version: ${{ matrix.coola-version }}
          python-version: ${{ matrix.python-version }}

      - name: Run some checks
        run: |
          python tests/package_checks.py

      - name: Run demo script
        run: |
          python -m scripts.demo


  grizz:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.12', '3.11', '3.10', '3.9' ]
        grizz-version: [ 0.1.1, 0.1.0 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install flamme
        run: |
          pip install flamme

      - name: Install valid package version
        uses: durandtibo/pip-install-package-action@v0.3.2
        with:
          package-name: 'grizz'
          package-version: ${{ matrix.grizz-version }}
          python-version: ${{ matrix.python-version }}

      - name: Run some checks
        run: |
          python tests/package_checks.py

      - name: Run demo script
        run: |
          python -m scripts.demo


  iden:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.12', '3.11', '3.10', '3.9' ]
        iden-version: [ 0.2.0, 0.1.0 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install flamme
        run: |
          pip install flamme

      - name: Install valid package version
        uses: durandtibo/pip-install-package-action@v0.3.2
        with:
          package-name: 'iden'
          package-version: ${{ matrix.iden-version }}
          python-version: ${{ matrix.python-version }}

      - name: Run some checks
        run: |
          python tests/package_checks.py

      - name: Run demo script
        run: |
          python -m scripts.demo


  jinja2:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.12', '3.11', '3.10', '3.9' ]
        jinja2-version: [ 3.1.6, 3.0.3 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install flamme
        run: |
          pip install flamme

      - name: Install valid package version
        uses: durandtibo/pip-install-package-action@v0.3.2
        with:
          package-name: 'jinja2'
          package-version: ${{ matrix.jinja2-version }}
          python-version: ${{ matrix.python-version }}

      - name: Run some checks
        run: |
          python tests/package_checks.py

      - name: Run demo script
        run: |
          python -m scripts.demo


  matplotlib:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.12', '3.11', '3.10', '3.9' ]
        matplotlib-version: [ 3.10.3, 3.9.3, 3.8.4, 3.7.4, 3.6.3 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install flamme
        run: |
          pip install flamme

      - name: Install valid package version
        uses: durandtibo/pip-install-package-action@v0.3.2
        with:
          package-name: 'matplotlib'
          package-version: ${{ matrix.matplotlib-version }}
          python-version: ${{ matrix.python-version }}

      - name: Run some checks
        run: |
          python tests/package_checks.py

      - name: Run demo script
        run: |
          python -m scripts.demo


  numpy:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.12', '3.11', '3.10', '3.9' ]
        numpy-version: [
          2.2.5,
          2.1.3,
          2.0.2,
          1.26.4,
          1.25.2,
          1.24.3,
          1.23.5,
        ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install flamme
        run: |
          pip install flamme

      - name: Install valid package version
        uses: durandtibo/pip-install-package-action@v0.3.2
        with:
          package-name: 'numpy'
          package-version: ${{ matrix.numpy-version }}
          python-version: ${{ matrix.python-version }}

      - name: Run some checks
        run: |
          python tests/package_checks.py

      - name: Run demo script
        run: |
          python -m scripts.demo


  objectory:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.12', '3.11', '3.10', '3.9' ]
        objectory-version: [ 0.2.0, 0.1.2, 0.1.0 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install flamme
        run: |
          pip install flamme

      - name: Install valid package version
        uses: durandtibo/pip-install-package-action@v0.3.2
        with:
          package-name: 'objectory'
          package-version: ${{ matrix.objectory-version }}
          python-version: ${{ matrix.python-version }}

      - name: Run some checks
        run: |
          python tests/package_checks.py

      - name: Run demo script
        run: |
          python -m scripts.demo


  polars:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.12', '3.11', '3.10', '3.9' ]
        polars-version: [
          1.29.0,
          1.0.0,
        ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install flamme
        run: |
          pip install flamme

      - name: Install valid package version
        uses: durandtibo/pip-install-package-action@v0.3.2
        with:
          package-name: 'polars'
          package-version: ${{ matrix.polars-version }}
          python-version: ${{ matrix.python-version }}

      - name: Run some checks
        run: |
          python tests/package_checks.py

      - name: Run demo script
        run: |
          python -m scripts.demo


  pyarrow:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.12', '3.11', '3.10', '3.9' ]
        pyarrow-version: [
          20.0.0,
          19.0.1,
          18.1.0,
          17.0.0,
          16.1.0,
          15.0.2,
          14.0.2,
          13.0.0,
          12.0.1,
          11.0.0,
          10.0.1,
        ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install flamme
        run: |
          pip install flamme

      - name: Install valid package version
        uses: durandtibo/pip-install-package-action@v0.3.2
        with:
          package-name: 'pyarrow'
          package-version: ${{ matrix.pyarrow-version }}
          python-version: ${{ matrix.python-version }}

      - name: Run some checks
        run: |
          python tests/package_checks.py

      - name: Run demo script
        run: |
          python -m scripts.demo


  scipy:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.12', '3.11', '3.10', '3.9' ]
        scipy-version: [ 1.15.3, 1.14.1, 1.13.1, 1.12.0, 1.11.4, 1.10.1 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install flamme
        run: |
          pip install flamme

      - name: Install valid package version
        uses: durandtibo/pip-install-package-action@v0.3.2
        with:
          package-name: 'scipy'
          package-version: ${{ matrix.scipy-version }}
          python-version: ${{ matrix.python-version }}

      - name: Run some checks
        run: |
          python tests/package_checks.py

      - name: Run demo script
        run: |
          python -m scripts.demo


  #################################
  #     Optional dependencies     #
  #################################


  clickhouse-connect:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.12', '3.11', '3.10', '3.9' ]
        clickhouse-connect-version: [ 0.8.17, 0.7.19, 0.7.0 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install flamme
        run: |
          pip install flamme

      - name: Install valid package version
        uses: durandtibo/pip-install-package-action@v0.3.2
        with:
          package-name: 'clickhouse-connect'
          package-version: ${{ matrix.clickhouse-connect-version }}
          python-version: ${{ matrix.python-version }}

      - name: Run some checks
        run: |
          python tests/package_checks.py

      - name: Run demo script
        run: |
          python -m scripts.demo


  colorlog:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.12', '3.11', '3.10', '3.9' ]
        colorlog-version: [ 6.9.0, 6.7.0 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install flamme
        run: |
          pip install flamme

      - name: Install valid package version
        uses: durandtibo/pip-install-package-action@v0.3.2
        with:
          package-name: 'colorlog'
          package-version: ${{ matrix.colorlog-version }}
          python-version: ${{ matrix.python-version }}

      - name: Run some checks
        run: |
          python tests/package_checks.py

      - name: Run demo script
        run: |
          python -m scripts.demo


  hya:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.12', '3.11', '3.10', '3.9' ]
        hya-version: [ 0.2.3, 0.2.0 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install flamme
        run: |
          pip install flamme

      - name: Install valid package version
        uses: durandtibo/pip-install-package-action@v0.3.2
        with:
          package-name: 'hya'
          package-version: ${{ matrix.hya-version }}
          python-version: ${{ matrix.python-version }}

      - name: Run some checks
        run: |
          python tests/package_checks.py

      - name: Run demo script
        run: |
          python -m scripts.demo


  markdown:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.12', '3.11', '3.10', '3.9' ]
        markdown-version: [ 3.8.0, 3.7.0, 3.6.0, 3.5.1, 3.4.3 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install flamme
        run: |
          pip install flamme

      - name: Install valid package version
        uses: durandtibo/pip-install-package-action@v0.3.2
        with:
          package-name: 'markdown'
          package-version: ${{ matrix.markdown-version }}
          python-version: ${{ matrix.python-version }}

      - name: Run some checks
        run: |
          python tests/package_checks.py

      - name: Run demo script
        run: |
          python -m scripts.demo


  tqdm:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.12', '3.11', '3.10', '3.9' ]
        tqdm-version: [ 4.67.1, 4.66.6, 4.65.2, 4.65.0 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install flamme
        run: |
          pip install flamme

      - name: Install valid package version
        uses: durandtibo/pip-install-package-action@v0.3.2
        with:
          package-name: 'tqdm'
          package-version: ${{ matrix.tqdm-version }}
          python-version: ${{ matrix.python-version }}

      - name: Run some checks
        run: |
          python tests/package_checks.py

      - name: Run demo script
        run: |
          python -m scripts.demo
